# The Flowmill k8s collector consists of two services:
# 1) k8s-watcher: talks to the Kubernetes API server to determine the current state of
#    the cluster; sets up watches to be notified of subsequent changes to pods, services
#    and other resources.
# 2) k8s-relay: relays the information collected by k8s-watcher to the Flowmill service.
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ include "flowmill-k8s-collector.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "flowmill-k8s-collector.fullname" . }}
    helm.sh/chart: {{ include "flowmill-k8s.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "flowmill-k8s-collector.fullname" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # This is here to allow us to do "zero-downtime" updates without an image change.
        rollingUpdateVersion: "1"
      labels:
        app.kubernetes.io/name: {{ include "flowmill-k8s-collector.fullname" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
      - image: "{{ .Values.watcher.repository }}:{{ .Values.watcher.tag }}"
        imagePullPolicy: {{ .Values.watcher.pullPolicy }}
        name: flowmill-k8s-watcher
        resources:
{{ toYaml .Values.watcher.resources | indent 12 }}
      # k8s-relay, which is a service that the k8s collector talks to.
      # Currently not configurable, has to be reachable on localhost:8172, so must
      # share a pod with the k8s collector above.  Talks in turn to flowmill-server
      # on our end.
      - image: "{{ .Values.relay.repository }}:{{ .Values.relay.tag }}"
        imagePullPolicy: {{ .Values.relay.pullPolicy }}
        name: flowmill-k8s-relay
        resources:
{{ toYaml .Values.relay.resources | indent 12 }}
        args:
{{- toYaml .Values.relay.args | nindent 10 }}
          - --authz-server
          - {{ default "flowmill.prd.flowtune.io" .Values.flowmill.services.host }}
          - --config-file
          - /etc/flowmill/config.yaml
        env:
{{- if hasKey .Values "chamberService" }}
          - name: "CHAMBER_SERVICE_NAME"
            value: {{ quote .Values.chamberService }}
{{- else }}
          - name: "FLOWMILL_AUTH_KEY_ID"
            valueFrom:
              secretKeyRef:
                key:  flowmill_agent_key_id
              {{- if .Values.flowmill.agentExistingSecret }}
                name: {{ .Values.flowmill.agentExistingSecret }}
              {{- else }}
                name: {{ template "flowmill-k8s.fullname" . }}-agent-key
              {{- end }}
          - name: "FLOWMILL_AUTH_SECRET"
            valueFrom:
              secretKeyRef:
                key:  flowmill_agent_secret
              {{- if .Values.flowmill.agentExistingSecret }}
                name: {{ .Values.flowmill.agentExistingSecret }}
              {{- else }}         
                name: {{ template "flowmill-k8s.fullname" . }}-agent-key
              {{- end }}
{{- end }}
          - name: "FLOWMILL_INTAKE_NAME"
            value: {{ default "flowmill-server" .Values.flowmill.intake.name }}
          - name: "FLOWMILL_INTAKE_HOST"
            value: {{ default "flowmill-intake.prd.flowtune.io" .Values.flowmill.intake.host }}
          - name: "FLOWMILL_INTAKE_PORT"
            value: "{{ default 443 .Values.flowmill.intake.port }}"
        volumeMounts:
        - mountPath: /etc/flowmill
          name: flowmill-k8s-relay-config
{{- if hasKey .Values "awsCollector" }}
      - image: "{{ .Values.awsCollector.repository }}:{{ .Values.awsCollector.tag }}"
        imagePullPolicy: {{ .Values.awsCollector.pullPolicy }}
        name: flowmill-aws-collector
        resources:
{{ toYaml .Values.awsCollector.resources | indent 10 }}
        args:
          - --authz-server
          - {{ default "flowmill.prd.flowtune.io" .Values.flowmill.services.host }}
          - --log-console
        env:
{{- if hasKey .Values "chamberService" }}
          - name: "CHAMBER_SERVICE_NAME"
            value: {{ quote .Values.chamberService }}
{{- else }}
          - name: "FLOWMILL_AUTH_KEY_ID"
            valueFrom:
              secretKeyRef:
                key:  flowmill_agent_key_id
              {{- if .Values.flowmill.agentExistingSecret }}
                name: {{ .Values.flowmill.agentExistingSecret }}
              {{- else }}
                name: {{ template "flowmill-k8s.fullname" . }}-agent-key
              {{- end }}
          - name: "FLOWMILL_AUTH_SECRET"
            valueFrom:
              secretKeyRef:
                key:  flowmill_agent_secret
              {{- if .Values.flowmill.agentExistingSecret }}
                name: {{ .Values.flowmill.agentExistingSecret }}
              {{- else }}         
                name: {{ template "flowmill-k8s.fullname" . }}-agent-key
              {{- end }}
{{- end }}
          - name: "FLOWMILL_INTAKE_NAME"
            value: {{ default "flowmill-server" .Values.flowmill.intake.name }}
          - name: "FLOWMILL_INTAKE_HOST"
            value: {{ default "flowmill-intake.prd.flowtune.io" .Values.flowmill.intake.host }}
          - name: "FLOWMILL_INTAKE_PORT"
            value: "{{ default 443 .Values.flowmill.intake.port }}"
{{- end }}
      volumes:
      - name: flowmill-k8s-relay-config
        projected:
          sources:
            - configMap:
                name: {{ include "flowmill-k8s.fullname" . }}-config
                items:
                - key: config.yaml
                  path: config.yaml
      securityContext: {}
      {{- if .Values.rbac.create }}
      serviceAccount: {{ include "flowmill-k8s-collector.fullname" . }}
      serviceAccountName: {{ include "flowmill-k8s-collector.fullname" . }}
      {{- end }}
      terminationGracePeriodSeconds: 30
