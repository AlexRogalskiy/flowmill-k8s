# Flowmill agent daemonset: deploys the flowmill agent to each node
# in the cluster.  The agent needs to be able to compile and install
# eBPF programs in the node's kernel, so needs to run as root and
# needs to mount /lib/modules and /usr/src from the node itself.
# You will need to install the kernel headers package on all k8s nodes.
# For Ubuntu and other Debian family releases:
#    sudo apt-get install --yes linux-headers-$(uname -r)
# For Fedora family and Amazon Linux:
#    sudo yum install -y kernel-devel-$(uname -r)
#
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "flowmill-agent-k8s.fullname" . }}
  annotations:
  labels:
    app.kubernetes.io/name: {{ include "flowmill-agent-k8s.fullname" . }}
    helm.sh/chart: {{ include "flowmill-k8s.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "flowmill-agent-k8s.fullname" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        release_number: "3"
      labels:
        app.kubernetes.io/name: {{ include "flowmill-agent-k8s.fullname" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ include "flowmill-agent-k8s.fullname" . }}
          image: "{{ .Values.agent.repository }}:{{ .Values.agent.tag }}"
          imagePullPolicy: {{ .Values.agent.pullPolicy }}
          args:
            - --authz-server
            - {{ default "flowmill.prd.flowtune.io" .Values.flowmill.services.host }}
            - --config-file
            - /etc/flowmill/config.yaml
{{- toYaml .Values.agent.args | nindent 12 }}
          # TODO: liveness probe
          env:
{{- if hasKey .Values "chamberService" }}
            - name: "CHAMBER_SERVICE_NAME"
              value: {{ quote .Values.chamberService }}
{{- else }}
            - name: "FLOWMILL_AUTH_KEY_ID"
              valueFrom:
                secretKeyRef:
                  key:  flowmill_agent_key_id
                {{- if .Values.flowmill.agentExistingSecret }}
                  name: {{ .Values.flowmill.agentExistingSecret }}
                {{- else }}
                  name: {{ template "flowmill-k8s.fullname" . }}-agent-key
                {{- end }}
            - name: "FLOWMILL_AUTH_SECRET"
              valueFrom:
                secretKeyRef:
                  key:  flowmill_agent_secret
                {{- if .Values.flowmill.agentExistingSecret }}
                  name: {{ .Values.flowmill.agentExistingSecret }}
                {{- else }}         
                  name: {{ template "flowmill-k8s.fullname" . }}-agent-key
                {{- end }}
{{- end }}
            - name: "FLOWMILL_INTAKE_NAME"
              value: {{ default "flowmill-server" .Values.flowmill.intake.name }}
            - name: "FLOWMILL_INTAKE_HOST"
              value: {{ default "flowmill-intake.prd.flowtune.io" .Values.flowmill.intake.host }}
            - name: "FLOWMILL_INTAKE_PORT"
              value: "{{ default 443 .Values.flowmill.intake.port }}"
          resources:
{{ toYaml .Values.agent.resources | indent 12 }}
          securityContext:
            privileged: true
          volumeMounts:
          - mountPath: /usr/src
            name: usr-src
            readOnly: true
          - mountPath: /lib/modules
            name: lib-modules
            readOnly: true
          - mountPath: /etc/flowmill
            name: {{ include "flowmill-agent-k8s.fullname" . }}-config
            readOnly: true
          - mountPath: /hostfs/sys/fs/cgroup
            name: hostfs-sys-fs-cgroup
            readOnly: true
      hostNetwork: true
      hostPID: true
      volumes:
      - name: {{ include "flowmill-agent-k8s.fullname" . }}-config
        projected:
          sources:
          - configMap:
              name: {{ include "flowmill-k8s.fullname" . }}-config
              items:
              - key: config.yaml
                path: config.yaml
      - name: usr-src
        hostPath:
          path: /usr/src
          type: Directory
      - name: lib-modules
        hostPath:
          path: /lib/modules
          type: Directory
      - name: hostfs-sys-fs-cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: Directory
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
